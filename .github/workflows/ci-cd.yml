name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    steps:
      # 1️⃣ Checkout del código (Repo A)
      - name: Checkout Repo A
        uses: actions/checkout@v3

      # 2️⃣ Configurar Docker
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # 3️⃣ Login en Docker Hub
      - name: Docker Login
        run: |
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin

      # 4️⃣ Construir y subir la imagen
      - name: Build and Push Docker Image
        run: |
          chmod +x ./build-and-push.sh
          ./build-and-push.sh

      # 5️⃣ Generar un tag único para la imagen
      - name: Set image tag
        run: echo "TAG=$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV

      # 6️⃣ Checkout Repo B usando token seguro
      - name: Checkout Repo B
        uses: actions/checkout@v3
        with:
          repository: jreb-123/.ks8-final-project
          token: ${{ secrets.REPO_B_TOKEN }}
          path: repo-b

      # 7️⃣ Actualizar Helm Chart en Repo B
      - name: Update Helm Chart in Repo B
        run: |
          cd repo-b
          echo "=== Antes ==="
          cat charts/mini-stack/values.yaml
          sed -i "s/tag:.*/tag: $TAG/" charts/mini-stack/values.yaml
          echo "=== Después ==="
          cat charts/mini-stack/values.yaml
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add charts/mini-stack/values.yaml
          git commit -m "Update image tag to $TAG"
          git push
